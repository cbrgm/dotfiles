[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	ui = auto
[user]
	email = chris@cbrgm.net
	name = cbrgm
[core]
	pager = less -FRSX
	editor = nvim
[alias]
	br = branch
	c = commit
	ci = commit
	cm = commit -m
	co = switch
	fo = fetch -p origin
	pl = pull
	ps = !git push -u origin $(git branch --show-current)
	st = status -sb
	# Set remotes/origin/HEAD -> defaultBranch (copied from https://stackoverflow.com/a/67672350/14870317)
	remoteSetHead = remote set-head origin --auto
	# Get default branch name (copied from https://stackoverflow.com/a/67672350/14870317)
	defaultBranch = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
	# Clean merged branches (adapted from https://stackoverflow.com/a/6127884/14870317)
	sweep = !git branch --merged $(git defaultBranch) | grep -E -v " $(git defaultBranch)$" | xargs -r git branch -d && git remote prune origin
	# http://www.jukie.net/bart/blog/pimping-out-git-log
	lg = log --graph --all --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'
	# Serve local repo. http://coderwall.com/p/eybtga
	# Then other can access via `git clone git://#{YOUR_IP_ADDRESS}/
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
	# Checkout to defaultBranch
	m = !git checkout $(git defaultBranch)
	# Removes a file from the index
	unstage = reset HEAD --[commit]
	# Show the user email for the current repository.
	whoami = config user.email
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch --all
	remotes = remote --verbose
	# Show the diff between the latest commit and the current state.
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state.
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# Interactive rebase with the given number of latest commits.
	reb = "!r() { git rebase -i HEAD~$1; }; r"
	# Remove the old tag with this name and tag the latest commit with it.
	retag = "!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r"
	go = "!f() { git switch \"$1\" 2> /dev/null || git checkout -b \"$1\"; }; f"
	# Commit all changes.
	ca = !git add -A && git commit -av
	# list files which have changed since REVIEW_BASE
	# (REVIEW_BASE defaults to 'master' in my zshrc)
	files = !git diff --name-only $(git merge-base HEAD $(git defaultBranch))
	# Same as above, but with a diff stat instead of just names
	# (better for interactive use)
	stat = !git diff --stat $(git merge-base HEAD $(git defaultBranch))
	# Open all files changed since REVIEW_BASE in Vim tabs
	# Then, run fugitive's :Gdiff in each tab
	review = !nvim $(git files)
	# List contributors with number of commits.
	contributors = shortlog --summary --numbered
	# Pull Request
	pr = !gh pr create --fill
[help]
	autocorrect = 1
[push]
	default = simple
[init]
	defaultBranch = main
[push]
	autoSetupRemote = true
